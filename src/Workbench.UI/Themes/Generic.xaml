<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="clr-namespace:Workbench.Views"
    xmlns:controls="clr-namespace:Workbench.Controls">
    
    <SolidColorBrush
        x:Key="selectionBorderColor"
        Color="Blue"/>
    
    <SolidColorBrush
        x:Key="selectionBorderBackgroundColor"
        Color="Blue"
        Opacity="0.25"/>

    <!-- Default style and control-template for 'GraphicItem'. -->
    <Style TargetType="{x:Type controls:GraphicItem}">

        <Setter Property="X"
                Value="{Binding X}" />
        <Setter Property="Y"
                Value="{Binding Y}" />
        <Setter Property="IsSelected" 
                Value="{Binding IsSelected}" />
        
        <!-- Data-bind the parent ModelView. -->
        <Setter
            Property="ParentGraphicView"
            Value="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:GraphicView}}, Path=.}"/>
        
        <!-- Set the position of the variable within the canvas. -->
        <Setter
            Property="Canvas.Left"
            Value="{Binding X, RelativeSource={RelativeSource Self}, Mode=TwoWay}"/>
        <Setter
            Property="Canvas.Top"
            Value="{Binding Y, RelativeSource={RelativeSource Self}, Mode=TwoWay}"/>
        
        <!-- Set the z-order of the variable within the canvas. -->
        <Setter
            Property="Canvas.ZIndex"
            Value="{Binding ZIndex, RelativeSource={RelativeSource Self}, Mode=TwoWay}"/>

        <!-- Set defaults for background and border. -->
        <Setter 
            Property="Background" 
            Value="Transparent" />
        <Setter 
            Property="BorderBrush" 
            Value="Transparent" />
        <Setter 
            Property="BorderThickness" 
            Value="1" />

        <!-- The control-template for the variable. -->
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type controls:GraphicItem}">
                    <Grid>
                        
                        <!-- 
                        This border indicates that variable is selected.
                        Normally it is transparent, but when 'IsSelected' is set
                        to 'true' the border brush becomes blue and its background
                        becomes light blue.
                        -->
                        <Border
                            x:Name="selectionBorder"
                            Background="{TemplateBinding Background}" 
                            BorderBrush="{TemplateBinding BorderBrush}" 
                            BorderThickness="{TemplateBinding BorderThickness}"
                            Margin="{TemplateBinding Margin}"
                            Padding="{TemplateBinding Padding}"
                            CornerRadius="2">
                            
                            <!-- 
                            User-defined variable content is presented here. 
                            -->
                            <ContentPresenter />
                           
                        </Border>
                        
                    </Grid>
                    <ControlTemplate.Triggers>
                        
                        <Trigger 
                            Property="IsSelected"
                            Value="True">
                            
                            <!-- When the variable is selected, set the color of 'selectionBorder' to blue. -->
                            <Setter
                                TargetName="selectionBorder"
                                Property="BorderBrush"
                                Value="{StaticResource selectionBorderColor}" />                                
                        </Trigger>
                        
                        <Trigger 
                            Property="IsSelected"
                            Value="True">
                            
                            <!-- When the variable is selected, set the background of 'selectionBorder' to light blue. -->
                            <Setter
                                TargetName="selectionBorder"
                                Property="Background"
                                Value="{StaticResource selectionBorderBackgroundColor}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- 
    Override the style of the ListBox to remove the ScrollViewer.
    All we want is ListBox logic but based on a Canvas.
    -->
    <Style x:Key="noScrollViewerListBoxStyle" TargetType="ListBox">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ListBox">
                    <!-- 
                    The ListBoxItems are presented in a Canvas.
                    'IsItemsHost' is set to 'True' so that the ListBox
                    uses the Canvas as the container for its items.
                    -->
                    <Canvas IsItemsHost="True" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Default style and visual template for 'NetworkView'. -->
    <Style TargetType="{x:Type local:GraphicView}">
        
        <!-- The visual template. -->
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:GraphicView}">
                    <Border 
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        Background="{TemplateBinding Background}">
                        <Grid>

                            <!-- Control that presents the variables. -->
                            <controls:GraphicItemsControl
                                x:Name="PART_GraphicItemsControl"
                                ItemsSource="{TemplateBinding Graphics}"
                                SelectionMode="Extended"
                                Style="{StaticResource noScrollViewerListBoxStyle}"
                                ItemTemplate="{TemplateBinding GraphicItemTemplate}"
                                ItemTemplateSelector="{TemplateBinding GraphicItemTemplateSelector}"
                                ItemContainerStyle="{TemplateBinding GraphicItemContainerStyle}"/>
                            
                            <!--
                            This Canvas and Border are used as a very simple way to render a drag selection rectangle.
                            -->
                            <Canvas
                                x:Name="PART_DragSelectionCanvas"
                                Visibility="Collapsed">
                                <Border 
                                    x:Name="PART_DragSelectionBorder"
                                    BorderBrush="Blue"
                                    BorderThickness="1"
                                    Background="LightBlue"
                                    CornerRadius="1"
                                    Opacity="0.5"/>
                            </Canvas>
                        </Grid>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>
